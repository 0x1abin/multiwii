1.prebis6:

- remove old way to init motor and calibrate

- it corrects the PIN5&6 switch bug for HEX6 and Y6

- thanks to the work initiated by Mariano, I completed it to be be fully compatible with Arduino MEGA boards (all configs and options). the modification is internally quite important.

it's just a #define to switch
#define PROMINI  //Arduino type
//#define MEGA

The PIN assignment for RC&motors is compatible with Aeroquad shield mega 2.x

PIN for MEGA board, maybe not definitive

PPM_SUM 19 (now separated from RC_THROTTLE assignment)
RC_THROTTLE 62 (=A8)
RC_ROLL 63 (=A9)
RC_PITCH 64 (=A10)
RC_YAW 65 (=A11)
RC_MODE 66 (=A12)
RC_AUX(not used) 67 (=A13)
RC_7(not used) 68 (=A14)
RC_8(not used) 69 (=A15)
I2C SDA 20
I2C SCL 21
FRONTMOTORPIN 2 (on 328p was 3) = servo for tricopter
REARMOTORPIN 3 (on 328p was 9)
RIGHTMOTORPIN 5 (on 328p was 10)
LEFTMOTORPIN 6 (on 328p was 11)
Y6RIGHT(HEXFRONT) 7 (on 328p was 6)
Y6LEFT(HEXREAR) 8 (on 328p was 5)
V_BAT_MONITOR A3
TILT&GIMBAL&WING A0/A1

- a bug seen by Mariano in stable mode (sqrt on a negative number) is corrected 

- TILT ROLL&PITCH is now compatible with TRICOPTER configuration






1.pre6:

- anti gyro glitch : I re introduced a limitation between 2 reads as it seemed to be more stable. Info from Point65.

- experimental: RC rate can be extended to 5. With this option, we should see a more linear response on pitch/roll sticks for very acrobatic setups.

- experimental: on quadris we can notice some “yaw jumps” when the yaw is suddenly stopped. There is now a function to smooth the stop. If you don't like it just remove the line axisPID[YAW] = constrain(axisPID[YAW],-50-abs(rcCommand[YAW]),+50+abs(rcCommand[YAW]));

- new feature: support of the following ACCs: BMA180, BMA020, ADXL345. Thanks to the contribution of mgros, opie11 and Point65

- new feature: support of baro BMP085. It is activated when the stable mode is selected. It acts as a virtual celling from the altitude where it is activated (like the first implementation in Mikrokopter)

- GUI: adding support for magneto in GUI. Also forthe protocol exchange with arduino (but still no code behind). I call it magneto, but I'm open for other term (compas, heading, ...)

- GUI: new buttons to indicate the presence of sensors.

- sketch: I added an  “advanced users settings” part with a description of some more tunning possibilities.

This version should be considered as a dev version (pre): I hope it's bug free, but it's probably not ;)
I noticed the sketch is a little bit smaller when compiled with the last arduino 0022 ;)







1.5

list of differences with the 1.4

#define MOTOR_STOP
this is an alternative method to stop immediately the motors when the throttle command is in low position
HEX6 added
motor pin :
//REAR_R => PIN 9
//FRONT_R => PIN 10
//REAR_L => PIN 11
//FRONT_L => PIN 3
//FRONT => PIN 6
//REAR => PIN 5

anti gyro glitch : the time we neutralize data after a hard reset is increased. The impact of gyro glitches is greatly reduced. I can even fly safely with a bad WMP copy doing a hard reset every 5s.

suppression of throttle rate pid curve: replaced by only one relevant value. PID can decrease proportionally between [1500-2000] throttle position (helps to prevent wobbling in fast translation).

internal soft simplification: EEPROM, serial communication, motor naming.

stable mode is greatly improved.

support of ADXL345 I2C acc. Benefit: the loop time WMP+ADXL345 is reduced, allowing a better stability, comparable to a WMP only conf. Obviously, ADXL345 must not be connected with a with a NK setup.The integration of BMA020 I2C acc should be easy because the code frame is ready.

when a NK is detected, the LED blink is much longer after the init step => it's a way to visualize the good detection of a nunchuk.

support of BMP085 I2C barometer. But for visualization purpose only. It can't be activated yet for altitude stabilization.

Known issue:the trim in acro mode is different of the trim in stable mode.

Note:
if you use a NK or a ADXL345 acc. You must do a manual calibration to see good results in gui
- stable mode with NK should indicate 0 / 0 / 200 acc values
- stable mode with ADXL345 should indicate 0 / 0 / 250 acc values
- If you have a constant +/- 400 values on the graph, the calibration is not done.
for the WMP+ADXL345 setup: (+/-BMP085 for curious)
- D12 +1 diode is used to poser the WMP
- a 3.3V is used to power the ADXL345 (stabilized alim or multiple LED from a 5V source)
to reset parameters to default: just upload an old version and the new again.
this version is compatible with everything designed before (WMP only conf or WMP+NK)








1.4:
Serial PPM:
	more explanation on //#define SERIAL_SUM_PPM
	only one line to comment/uncomment in order to activate it
	a bug was corrected about the number of channel

integration of Y6
	the code of the working test version is now merged

integration of pitch/roll servo stabilization (compatible only with QUAD+ and QUADX setup)
	SERVO_TILT_PITCH_PIN: A0
	SERVO_TILT_ROLL_PIN:  A1
	- for each servo, it is possible to set up diferent parameters directly in the sketch (no GUI interraction)
	TILT_PITCH_MIN    1020    //servo travel min, don't set it below 1020
	TILT_PITCH_MAX    2000    //servo travel max, max value=2000
	TILT_PITCH_MIDDLE 1500    //servo neutral value
	TILT_PITCH_PROP   10      //servo proportional (tied to angle) ; can be negative to invert movement

integration of a GIMBAL configuration : mix of pitch/roll angle + input stick servo stabilization
	this is the same as previous, but is is a pure gimbal system (no ESC)
	the input RC stick position is mixed with the angle calculation

suppression of AXIS RATE PID curve which was not enough comprehensible . Replaced by 2 more versatile boxes:
	- ROLL/PITCH RATE: to increase the rotation rate for ROLL&PITCH axis
	- YAW RATE: to increase the rotation rate for ROLL&PITCH axis
	0 = default soft rate ; 0.7 = acro rate ; 1 = insane rate (be careful with 1 setting, it's very violent)

longer blinking LED after each calibration

new calibration approach
	at each initialization:
		the gyro calibration is done
		the acc calibration is done only for a pure gimbal setup
		for other setups, the acc is retrieved from the EEPROM
	on demand (via full left yaw stick + full pitch low stick):
		the gyro calibration is done
		the acc calibration is done and store in the EERPOM
	=> the acc calibration must be done at least once on demand.

adding a #define to supress LCD code in order to save memory space

autolevel strength: the last range was [0;10]. The new range is [0;25] with a reduction weight of 2.5 => more precision for tunning.





1.2:
I pushed a little further the optimization of code size, it's now only 14k.
A lot of work to reduce LCD code without affecting the desired result.
There would be now enough room in the Arduino to run 2 TriiWii code.
It's mainly useful for old Arduino cards with only a 168p inside and half memory.(we can still find these cards less priced on ebay)
The range of parameters is extended in the GUI.
- BI copter mode with 2 servos is introduced, but not yet tested on a real model. I tested only the reaction in the GUI. 






1.1:
A lot of code change:
most float operations in the critical parts (PID loop) are replaced by int operations 
protocol between GUI and arduino is simplified 
LCD code rewrote 
EEPROM code rewrote 
There is no new functionalities, it's more an optimization.
But it increases the speed of the code, and it is also much smaller (19k->15k) 





1.0:
This is a new version which first aim is to consolidate what has already be developed in the thread.
I rename it TriWii to MultiWii as the soft is now designed also for QUAD copter
There are some real improvements and changes:
Sketch: support of TRI, QUAD+ and QUADX 
Sketch: support of PPM SUM input signal of digital pin 2 
Arduino: PIN remapping ! (see the previous posts and main site). Think about doing some soldering before an upgrade from the previous TriWii 
GUI: better PITCH/ROLL representation and representation of the model inclination 
GUI: support of TRI, QUAD+ and QUADX, automatically recognized 
GUI: ACC graph enabled by default 
Site: partially updated, but the main part is ok
The stabilization WMP and NK+WMP is not different from the previous version. 